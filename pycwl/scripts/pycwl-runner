#!/usr/bin/env python

import argparse
import os
import logging
import sys
from pycwl.runner import runner

logger = logging.getLogger(__name__)


def is_dir(dirname):
    '''Check if path is a directory, return directory'''
    if os.path.isdir(dirname):
        return dirname
    else:
        msg = "{0} is not a directory".format(dirname)
        raise argparse.ArgumentTypeError(msg)

if __name__ == "__main__":
    # define arguments
    parser = argparse.ArgumentParser(description='cwl-runner')
    parser.add_argument('--outdir', type=is_dir,
                        help=('Output directory, defaults to the current ' +
                              'directory'),
                        default=os.getcwd())
    parser.add_argument('--quiet', action='store_true',
                        help='No diagnostic output')
    parser.add_argument('--debug', action='store_true',
                        help='Debugging output')
    parser.add_argument('--validate', action='store_true',
                        help='Validate CWL document')
    parser.add_argument('--print-dot', action='store_true',
                        help='Print workflow visualization in graphviz format')
    parser.add_argument('--print-png', nargs='?', const='cwl.png',
                        default=False,
                        help=('Save workflow visualization in graphviz ' +
                              'format as png'))
    parser.add_argument('workflow', metavar='workflow', help='workflow')
    parser.add_argument('job_object', metavar='job_object', nargs='?',
                        help='job_object', default=False)
    args = parser.parse_args()
    # set basic logging config
    if (args.quiet and args.debug):
        print('Conflicting arguments --quiet and --debug', file=sys.stderr)
        sys.exit(1)
    elif args.quiet:
        loglevel = logging.WARNING
    elif args.debug:
        loglevel = logging.DEBUG
    else:
        loglevel = logging.INFO
    logging.basicConfig(level=loglevel,
                        format='%(asctime)s - %(levelname)s - %(message)s',
                        datefmt='%Y/%m/%d/%H:%M:%S')
    logging.info('Basic arguments: ' + str(vars(args)))
    runner(args)
